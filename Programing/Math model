import math
import matplotlib
import matplotlib.pyplot as plt

m0 = 283000 # стартовая масса ракеты в кг
# время взлета - 260с
n = 250000 / 260 # расход топлива в секунду ~961.5385 кг/с
Ft = 906500 * 4 + 843000 # сила тяги двигателей
def p(h): #функция возвращает плотность от высоты
    dict = {
    0: 1.225,
    2500: 0.898,
    5000: 0.642,
    7500: 0.446,
    10_000: 0.288,
    15_000: 0.108,
    20_000: 0.040,
    25_000: 0.035,
    30_000: 0.015,
    40_000: 0.001,
    50_000: 0,
    60_000: 0,
    70_000: 0
    }
    keys = list(dict.keys())
    for i in range(len(keys) - 1):
        if keys[i] <= h and h <= keys[i + 1]:
            if abs(keys[i] - h) <= abs(keys[i + 1] - h):
                return dict[keys[i]]
            else:
                return dict[keys[i + 1]]
    return dict[70_000]

def g(h):
    G = 6.67430 * 10 ** -11 #гравитационная постоянная м**3*с**-2*кг**-1
    Mz = 5.9742 * 10 ** 24 # масса земли в кг
    Rz = 6378000 # радиус земли в м
    return G * Mz / (Rz + h) ** 2

h_x = 0
h_y = 0
s = ((1.2 + 1.85 + 1.85) / 2) ** 2 * math.pi # площадь основания
u_y = 0
u_x = 0
u = math.sqrt(u_x ** 2 + u_y ** 2) # модуль скорости
t = 0

h0 = math.sqrt(h_x ** 2 + h_y ** 2) #высота подъема
u = math.sqrt(u_x ** 2 + u_y ** 2) # модуль скорости

def F_sopr(h, u): # сила сопротивления воздуха
    Cf = 0.48
    return 0.5 * p(h) * (u ** 2) * Cf * s


u_l = []
h_l = []
t_l = []


while h0 <= 28000:
    t += 1
    a_x = (Ft * 0 - F_sopr(h0, u_x) - m0 * g(h0) * 0) / m0 * 0
    a_y = (Ft * 1 - F_sopr(h0, u_y) - m0 * g(h0) * 1) / m0
    u_x += a_x
    u_y += a_y
    h_x = h_x + u_x + a_x/2
    h_y = h_y + u_y + a_y / 2

    u = math.sqrt(u_x ** 2 + u_y ** 2)
    h0 = math.sqrt(h_x ** 2 + h_y ** 2)
    m0 -= n * 1.5

    u_l.append(u)
    h_l.append(h0)
    t_l.append(t)

# отделение певрой ступени
m0 -= 1500 * 4
Ft /= 2


while h0 <= 170000:
    t += 1
    beta = 90 * (1 - h0 / 170000)

    a_x = ((Ft - F_sopr(h0, u_x) - m0 * g(h0)) * math.cos(beta / 180 * math.pi)) / m0 * 0
    a_y = ((Ft - F_sopr(h0, u_y) - m0 * g(h0)) * math.sin(beta / 180 * math.pi)) / m0
    u_x += a_x
    u_y += a_y
    h_x = h_x + u_x + a_x / 2
    h_y = h_y + u_y + a_y / 2

    u = math.sqrt(u_x ** 2 + u_y ** 2)
    h0 = math.sqrt(h_x ** 2 + h_y ** 2)
    m0 -= n * 1.5

    u_l.append(u)
    h_l.append(h0)
    t_l.append(t)


plt.figure(figsize=(5, 2.7), layout='constrained')
plt.plot(t_l, h_l, label='высота')  # Plot some data on the (implicit) Axes.
plt.xlabel('время полета')
plt.ylabel('высота полета')
plt.title("График зависимости высоты полета от времени")
plt.legend()
plt.show()

plt.figure(figsize=(3, 1.5), layout='constrained')
plt.plot(t_l, u_l, label='скорость')
plt.xlabel('время полета')
plt.ylabel('скорость полета')
plt.title("График зависимости скорости полета от времени")
plt.legend()

plt.show()
